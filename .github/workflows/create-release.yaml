name: Create GitHub Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    steps:
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          name: Release ${{ github.ref_name }}
          draft: true
  build-windows-installer:
    name: Build Windows Installer
    runs-on: windows-latest
    needs: create-release
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.node-version'
      - name: restore node_modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - name: Prepare Environment
        run: |
          corepack enable
          yarn --immutable --network-timeout 1000000
        env:
          CI: true
      - name: Build installer
        run: |
          yarn electron:build
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: (Debug) List build files
        run: |
          ls dist_electron
  build-linux-installer:
    name: Build Linux Installer
    runs-on: ubuntu-latest
    needs: create-release
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.node-version'
      - name: restore node_modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - name: Prepare Environment
        run: |
          corepack enable
          yarn --immutable --network-timeout 1000000
        env:
          CI: true
      - name: Build installer
        run: |
          yarn electron:build
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  build-macos-installer:
    name: Build MacOS Installer
    runs-on: macos-latest
    needs: create-release
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.node-version'
      - name: restore node_modules
        uses: actions/cache@v3
        with:
          path: |
            node_modules
          key: ${{ runner.os }}-${{ hashFiles('yarn.lock') }}
      - name: Prepare Environment
        run: |
          corepack enable
          yarn --immutable --network-timeout 1000000
        env:
          CI: true
      - name: Build installer
        run: |
          yarn electron:build
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
